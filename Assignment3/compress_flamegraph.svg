<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>schedule (1,195,440,011 samples, 0.02%)</title><rect x="1180.0" y="261" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1182.96" y="271.5" ></text>
</g>
<g >
<title>[libjvm.so] (837,787,381 samples, 0.01%)</title><rect x="1189.8" y="325" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.81" y="335.5" ></text>
</g>
<g >
<title>all (7,307,318,545,279 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[libjvm.so] (1,245,703,929 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.80" y="383.5" ></text>
</g>
<g >
<title>[libjvm.so] (1,196,103,894 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.81" y="351.5" ></text>
</g>
<g >
<title>_new_array_Java (3,454,997,935 samples, 0.05%)</title><rect x="1157.0" y="213" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1160.03" y="223.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="373" width="1169.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="13.11" y="383.5" >[libjvm.so]</text>
</g>
<g >
<title>update_process_times (6,702,067,394 samples, 0.09%)</title><rect x="1155.5" y="85" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.48" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,496,290,455 samples, 0.02%)</title><rect x="1179.9" y="389" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1182.91" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,431,476,653 samples, 0.02%)</title><rect x="1179.9" y="341" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1182.92" y="351.5" ></text>
</g>
<g >
<title>[libjvm.so] (837,787,381 samples, 0.01%)</title><rect x="1189.8" y="293" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.81" y="303.5" ></text>
</g>
<g >
<title>[libjvm.so] (58,980,430,612 samples, 0.81%)</title><rect x="1180.3" y="373" width="9.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1183.26" y="383.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (781,889,408 samples, 0.01%)</title><rect x="1160.4" y="149" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1163.42" y="159.5" ></text>
</g>
<g >
<title>exc_page_fault (809,725,950 samples, 0.01%)</title><rect x="1157.9" y="197" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1160.85" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (6,399,562,289 samples, 0.09%)</title><rect x="1158.8" y="53" width="1.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1161.76" y="63.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compressor:::output (704,066,869,325 samples, 9.64%)</title><rect x="637.8" y="213" width="113.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="640.79" y="223.5" >Lspec/benchmar..</text>
</g>
<g >
<title>futex_wait_queue (1,195,440,011 samples, 0.02%)</title><rect x="1180.0" y="277" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1182.96" y="287.5" ></text>
</g>
<g >
<title>__futex_wait (1,335,307,475 samples, 0.02%)</title><rect x="1179.9" y="293" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1182.94" y="303.5" ></text>
</g>
<g >
<title>[libjvm.so] (58,353,762,314 samples, 0.80%)</title><rect x="1180.3" y="357" width="9.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1183.32" y="367.5" ></text>
</g>
<g >
<title>call_stub (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="309" width="1169.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="13.11" y="319.5" >call_stub</text>
</g>
<g >
<title>GC_task_thread# (61,144,841,052 samples, 0.84%)</title><rect x="1179.9" y="437" width="9.9" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1182.91" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (809,725,950 samples, 0.01%)</title><rect x="1157.9" y="213" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1160.85" y="223.5" ></text>
</g>
<g >
<title>futex_wait (1,431,476,653 samples, 0.02%)</title><rect x="1179.9" y="309" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1182.92" y="319.5" ></text>
</g>
<g >
<title>x64_sys_call (1,431,476,653 samples, 0.02%)</title><rect x="1179.9" y="357" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1182.92" y="367.5" ></text>
</g>
<g >
<title>[libjvm.so] (716,428,338 samples, 0.01%)</title><rect x="1188.7" y="309" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1191.67" y="319.5" ></text>
</g>
<g >
<title>start_thread (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="421" width="1169.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.11" y="431.5" >start_thread</text>
</g>
<g >
<title>[libjvm.so] (1,245,703,929 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.80" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,373,865,229 samples, 0.13%)</title><rect x="1155.3" y="181" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1158.33" y="191.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compressor:::clBlock (3,772,762,847 samples, 0.05%)</title><rect x="637.2" y="213" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="640.18" y="223.5" ></text>
</g>
<g >
<title>arrayof_jint_fill (3,636,389,081 samples, 0.05%)</title><rect x="637.2" y="197" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="640.20" y="207.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (3,196,019,735 samples, 0.04%)</title><rect x="1157.1" y="181" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.07" y="191.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Decompressor:::decompress (2,510,913,002,100 samples, 34.36%)</title><rect x="751.5" y="213" width="405.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="754.48" y="223.5" >Lspec/benchmarks/compress/Decompressor:::decompress</text>
</g>
<g >
<title>__schedule (1,195,440,011 samples, 0.02%)</title><rect x="1180.0" y="245" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1182.96" y="255.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="325" width="1169.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="13.11" y="335.5" >[libjvm.so]</text>
</g>
<g >
<title>Interpreter (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="277" width="1169.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="13.11" y="287.5" >Interpreter</text>
</g>
<g >
<title>tick_nohz_highres_handler (7,080,543,091 samples, 0.10%)</title><rect x="1155.4" y="117" width="1.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1158.42" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,895,983,027 samples, 0.04%)</title><rect x="751.0" y="197" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="753.99" y="207.5" ></text>
</g>
<g >
<title>tick_program_event (757,018,355 samples, 0.01%)</title><rect x="1160.6" y="149" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1163.56" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (59,017,462,454 samples, 0.81%)</title><rect x="1180.3" y="405" width="9.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1183.25" y="415.5" ></text>
</g>
<g >
<title>perf_event_task_tick (6,637,819,067 samples, 0.09%)</title><rect x="1158.7" y="69" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1161.74" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (15,764,700,590 samples, 0.22%)</title><rect x="1158.1" y="181" width="2.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1161.13" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,676,459,207 samples, 0.19%)</title><rect x="1158.2" y="149" width="2.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1161.18" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (10,966,896,535 samples, 0.15%)</title><rect x="1158.6" y="85" width="1.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1161.59" y="95.5" ></text>
</g>
<g >
<title>[libjvm.so] (1,245,703,929 samples, 0.02%)</title><rect x="1189.8" y="405" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.80" y="415.5" ></text>
</g>
<g >
<title>BenchmarkThread (7,244,342,103,216 samples, 99.14%)</title><rect x="10.0" y="437" width="1169.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >BenchmarkThread</text>
</g>
<g >
<title>tick_nohz_highres_handler (13,060,151,272 samples, 0.18%)</title><rect x="1158.3" y="133" width="2.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1161.28" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,318,130,961 samples, 0.10%)</title><rect x="1155.4" y="133" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1158.38" y="143.5" ></text>
</g>
<g >
<title>VM_Thread (1,248,331,915 samples, 0.02%)</title><rect x="1189.8" y="437" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.80" y="447.5" ></text>
</g>
<g >
<title>do_futex (1,431,476,653 samples, 0.02%)</title><rect x="1179.9" y="325" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1182.92" y="335.5" ></text>
</g>
<g >
<title>[libjvm.so] (1,967,933,271 samples, 0.03%)</title><rect x="1188.5" y="341" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1191.49" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,486,512,242 samples, 0.03%)</title><rect x="751.0" y="149" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="754.03" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="341" width="1169.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="13.11" y="351.5" >[libjvm.so]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,928,659,419 samples, 0.14%)</title><rect x="1155.2" y="197" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1158.24" y="207.5" ></text>
</g>
<g >
<title>[libjvm.so] (1,041,296,446 samples, 0.01%)</title><rect x="1188.6" y="325" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1191.62" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,769,805,290 samples, 0.09%)</title><rect x="1155.5" y="101" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1158.47" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (984,400,614 samples, 0.01%)</title><rect x="1189.4" y="309" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.44" y="319.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (1,496,657,865 samples, 0.02%)</title><rect x="1179.9" y="405" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1182.91" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (1,570,397,051 samples, 0.02%)</title><rect x="1160.0" y="53" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1163.00" y="63.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1,042,160,763 samples, 0.01%)</title><rect x="751.1" y="37" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="754.10" y="47.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,005,216,023 samples, 0.03%)</title><rect x="751.0" y="101" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="754.04" y="111.5" ></text>
</g>
<g >
<title>Interpreter (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="293" width="1169.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="13.11" y="303.5" >Interpreter</text>
</g>
<g >
<title>update_process_times (2,005,216,023 samples, 0.03%)</title><rect x="751.0" y="85" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="754.04" y="95.5" ></text>
</g>
<g >
<title>[perf-431934.map] (7,243,647,038,923 samples, 99.13%)</title><rect x="10.1" y="261" width="1169.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="13.11" y="271.5" >[perf-431934.map]</text>
</g>
<g >
<title>[libjvm.so] (837,787,381 samples, 0.01%)</title><rect x="1189.8" y="309" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.81" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,164,338,048 samples, 0.17%)</title><rect x="1158.4" y="117" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1161.42" y="127.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="357" width="1169.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="13.11" y="367.5" >[libjvm.so]</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (3,038,024,822 samples, 0.04%)</title><rect x="1155.7" y="37" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1158.72" y="47.5" ></text>
</g>
<g >
<title>[unknown] (622,549,012 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (15,557,754,386 samples, 0.21%)</title><rect x="1158.2" y="165" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1161.17" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="405" width="1169.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="13.11" y="415.5" >[libjvm.so]</text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compressor:::output (91,156,361,524 samples, 1.25%)</title><rect x="1160.9" y="229" width="14.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1163.92" y="239.5" ></text>
</g>
<g >
<title>task_tick_fair (2,841,247,433 samples, 0.04%)</title><rect x="1159.8" y="69" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1162.81" y="79.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,462,765,290 samples, 0.23%)</title><rect x="1158.1" y="197" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1161.13" y="207.5" ></text>
</g>
<g >
<title>[libjvm.so] (59,017,237,999 samples, 0.81%)</title><rect x="1180.3" y="389" width="9.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1183.25" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,429,869,400 samples, 0.02%)</title><rect x="1189.4" y="325" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.36" y="335.5" ></text>
</g>
<g >
<title>update_load_avg (1,017,692,889 samples, 0.01%)</title><rect x="1156.3" y="37" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1159.30" y="47.5" ></text>
</g>
<g >
<title>start_thread (59,017,462,454 samples, 0.81%)</title><rect x="1180.3" y="421" width="9.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1183.25" y="431.5" ></text>
</g>
<g >
<title>[libjvm.so] (3,454,997,935 samples, 0.05%)</title><rect x="1157.0" y="197" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1160.03" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (1,668,394,120 samples, 0.02%)</title><rect x="1156.2" y="53" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1159.21" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (763,606,530 samples, 0.01%)</title><rect x="1189.5" y="261" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.47" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,496,290,455 samples, 0.02%)</title><rect x="1179.9" y="373" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.91" y="383.5" ></text>
</g>
<g >
<title>[libjvm.so] (1,245,703,929 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.80" y="399.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (5,082,806,953 samples, 0.07%)</title><rect x="1188.8" y="341" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1191.81" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (763,606,530 samples, 0.01%)</title><rect x="1189.5" y="245" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.47" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1,042,160,763 samples, 0.01%)</title><rect x="751.1" y="53" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="754.10" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,005,216,023 samples, 0.03%)</title><rect x="751.0" y="133" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="754.04" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (765,757,401 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.82" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (763,606,530 samples, 0.01%)</title><rect x="1189.5" y="277" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.47" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,306,095,787 samples, 0.11%)</title><rect x="1155.4" y="149" width="1.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1158.37" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (6,086,681,640 samples, 0.08%)</title><rect x="1155.6" y="69" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1158.57" y="79.5" ></text>
</g>
<g >
<title>do_anonymous_page (763,606,530 samples, 0.01%)</title><rect x="1189.5" y="229" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.47" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (984,044,551 samples, 0.01%)</title><rect x="1189.4" y="293" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1192.44" y="303.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Harness:::runCompress (7,243,233,568,136 samples, 99.12%)</title><rect x="10.1" y="245" width="1169.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="13.13" y="255.5" >Lspec/benchmarks/compress/Harness:::runCompress</text>
</g>
<g >
<title>[libjvm.so] (7,243,680,911,511 samples, 99.13%)</title><rect x="10.1" y="389" width="1169.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="13.11" y="399.5" >[libjvm.so]</text>
</g>
<g >
<title>[unknown] (1,498,671,622 samples, 0.02%)</title><rect x="1179.9" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.91" y="431.5" ></text>
</g>
<g >
<title>arrayof_jint_fill (920,534,575 samples, 0.01%)</title><rect x="1157.6" y="213" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1160.64" y="223.5" ></text>
</g>
<g >
<title>[libjvm.so] (812,818,844 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.81" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,478,365,366 samples, 0.12%)</title><rect x="1155.3" y="165" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1158.35" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,005,216,023 samples, 0.03%)</title><rect x="751.0" y="117" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="754.04" y="127.5" ></text>
</g>
<g >
<title>start_thread (1,245,703,929 samples, 0.02%)</title><rect x="1189.8" y="421" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.80" y="431.5" ></text>
</g>
<g >
<title>[libjvm.so] (692,199,192 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1192.83" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,555,555,554 samples, 0.03%)</title><rect x="751.0" y="165" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="754.03" y="175.5" ></text>
</g>
<g >
<title>perf_event_task_tick (3,178,640,651 samples, 0.04%)</title><rect x="1155.7" y="53" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1158.70" y="63.5" ></text>
</g>
<g >
<title>scheduler_tick (1,833,947,175 samples, 0.03%)</title><rect x="751.1" y="69" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="754.06" y="79.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compress:::performAction (7,126,019,532,740 samples, 97.52%)</title><rect x="10.2" y="229" width="1150.7" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="13.19" y="239.5" >Lspec/benchmarks/compress/Compress:::performAction</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,383,898,011 samples, 0.24%)</title><rect x="1158.0" y="213" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1160.99" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,727,849,532 samples, 0.04%)</title><rect x="751.0" y="181" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="754.02" y="191.5" ></text>
</g>
<g >
<title>update_process_times (12,129,454,760 samples, 0.17%)</title><rect x="1158.4" y="101" width="2.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1161.43" y="111.5" ></text>
</g>
<g >
<title>updateBytesCRC32 (25,443,191,744 samples, 0.35%)</title><rect x="1175.7" y="229" width="4.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1178.67" y="239.5" ></text>
</g>
</g>
</svg>
